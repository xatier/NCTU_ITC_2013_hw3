/*DO NOT Hand in this file!!!*/
/*DO NOT Hand in this file!!!*/
/*DO NOT Hand in this file!!!*/

#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cerrno>
#define INPUT_FILE "encrypt.mp3"
#define OUTPUT_FILE "decrypt.mp3"
#define SESSION_KEY 0x123456789ABCDEF0
#define FRAME_COUNTER 0x00123456

#include "0016XXX.cpp"


using namespace std;

void* A51Initial(unsigned long long sessionKey,unsigned int frameCounter);
/* Using this funciton to initialize your A5-1 stream cipher state.
 * sessionKey: a 64-bit unsigned integer
 * frameCounter: a 22-bit unsigned integer
 * This funtion returns a structure defined by yourself to keep the 
 * stream cipher state
 */

unsigned char A51GetByte(void* LFSR);
/* Using this function to get a 8-bit key stream from the current state
 * LFSR: the current A5-1 stream cipher state
 * This function returns an unsigned char which generated by your A5-1
 */

int main(int argc,char* argv[]){
	unsigned char inputChar;
	unsigned char myA51Byte;
	unsigned long long sessionKey;//should be 64 bits
	unsigned int frameCounter;//should be 22 bits
	FILE *inFptr;
	FILE *outFptr;
	char inFilename[256];
	char outFilename[256];
	void *LFSR;
	/*you can choose to use default setup or command line parameters.*/
	if(argc==5){//command line parameters
		sessionKey=strtoull(argv[1],NULL,0);
		if(errno){
		    fprintf(stderr,"Invalid Session Key input!\n");
		    exit(1);
		}
		frameCounter=strtoul(argv[2],NULL,0);
		if(errno){
		    fprintf(stderr,"Invalid Frame Counter input!\n");
		    exit(1);
		}
		if(strlen(argv[3]) > 255){
			fprintf(stderr,"Input Filename too long!\n");
			exit(1);
		}
		strncpy(inFilename,argv[3],256);
		if(strlen(argv[4]) > 255){
			fprintf(stderr,"Output Filename too long!\n");
			exit(1);
		}
		strncpy(outFilename,argv[4],256);
	}
	else if(argc==1){//use default parameters
		sessionKey=SESSION_KEY;
		frameCounter=FRAME_COUNTER;
		strncpy(inFilename,INPUT_FILE,256);
		strncpy(outFilename,OUTPUT_FILE,256);
	}
	else{//wrong format
		printf("Usage:./main [<Session Key> <Frame Counter> <Input Filename> <Output Filename>]\n");
		return -1;
	}
	
	/*First, initialize your A5-1*/
	LFSR=A51Initial(sessionKey,frameCounter);
	
	/*Open input file*/
	inFptr=fopen(inFilename,"r");
	if(inFptr==NULL){//Check if it exists
		fprintf(stderr,"%s: No such file!\n",inFilename);
		exit(1);
	}
	
	/*Open output file*/
	outFptr=fopen(outFilename,"w");
	if(outFptr==NULL){//Check if it could be open
		fprintf(stderr,"%s: error while opening file to write!\n",inFilename);
		exit(1);
	}
	
	/*Read until the end of file*/
	while(fread(&inputChar,1,1,inFptr)!=0){
		/*Get a byte of your A5-1*/
		myA51Byte=A51GetByte(LFSR);
		myA51Byte^=inputChar;
		/*XOR with the input byte and write it to the output file*/
		if(fwrite(&myA51Byte,1,1,outFptr)==0){
			fprintf(stderr,"fwrite error!\n");
			exit(1);
		}
	}
	if(!feof(inFptr)){
		fprintf(stderr,"fread error!\n");
		exit(1);
	}
	
	/*Close file*/
	fclose(inFptr);
	fclose(outFptr);
	return 0;
}
